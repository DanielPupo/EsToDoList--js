// ==================================== \\
// ========= EsToDoList - CRUD ========= \\
// ==================================== \\

// 1. Selecionar os elementos da p√°gina
const campoNovaTarefa = document.getElementById('nova-tarefa-input')
console.log(novaTarefa)

const campoAdicionar = document.getElementById('adicionar-btn')

const campoTarefas = document.getElementById('lista-de-tarefas')
const campoPesquisa = document.getElementById('pesquisa_input')
const seletorFiltro = document.getElementById('filtro-select')

// Array principal que armazenar√° todas as tarefas \\
let tarefas = []

// 2. Fun√ß√£o para carregar tarefas salvas no navegador (localStorage) \\
function carregarTarefasSalvas(){
    const tarefasSalvas = localStorage.getItem('tarefas')
    if (tarefasSalvas){
        tarefas = JSON.parse(tarefasSalvas) // Converte o texto para array
        exibirTarefas(tarefas)
    }
}

// 3. Fun√ß√£o que ir√° salvar as tarfeas no navegador \\
function salvarTarefas(){
    localStorage.setItem('tarefas', JSON.stringify(tarefas))
}

// 4. Fun√ß√£o para adiciobar uma nnova tarefa \\
function adicionarTarefa(){
    let textoTarefa = campoNovaTarefa.value.trim() // remove espa√ßoes em branco

    if (textoTarefa == ""){
        alert('Digite uma nova tarefa antes de adicionar!')
        return
    }

    const novaTarefa = {
        id: Date.now(),
        texto: textoTarefa,
        concluida: false
    }

// Adiciona a nova tarefa ao array e salvamos no navegador \\
    tarefas.push(novaTarefa)
    salvarTarefas()

// Atualiamos a lista de tarefas \\
    exibirTarefas(tarefas)

// Limpamos o campo de texto
    campoNovaTarefa.value = ''
}

// 5. Fun√ß√£o para mostrar as tarefas no navegador \\
function exibirTarefas(listaParaMostrar){
    // Limpar as tarefas antes de exibir \\
    listaTarefas.innerHTML = ''

    // Estrutura de repeti√ß√£o para adicionar novas tarefas \\
    for (let tarefa of listaParaMostrar){
        // Criar um <li> para cada tarefa \\
        const item = document.createElement('li')
        item.className = 'flex justify-between items-center p-3 border rounded-lg shadow-sm bg-gray-50 hover:bg-gray-100 transition'

        // Adicionamos a classe 'concluida' se a tarefa estiver marcada \\
        if (tarefa.concluida){
            item.classList.add('concluida')
    }
    
        // Criar um span para o texto da tarefa \\
        const textoTarefa = document.createElement('Span')
        textoTarefa.textContent = tarefa.texto
        textoTarefa.className = 'tarefa-texto flex-grow cursor-pointer'
        textoTarefa.onclick = function(){
            alternarConclusao(tarefa.id)
        }

        // Criar os bot√µes de editar e excluir \\
        const botoes = document.createElement('div')
        botoes.className = 'flex space-x-2'

        const botaoEditar = document.createElement('button')
        botaoEditar.className = 'px-2 py-1 bg-yellow-400 hoverbg-yellow-500 text-white rounded'
        botaoEditar.textContent = '‚úè'
        botaoEditar.onclick = function(){
            editarTarefa(tarefa.id)
        }

        const botaoExcluir = document.createElement('button')
        botaoExcluir.className = 'px-2 py-1 bg-yellow-400 hoverbg-yellow-500 text-white rounded'
        botaoExcluir.textContent = 'üóë'
        botaoExcluir.onclick = function(){
            editarTarefa(tarefa.id)
        }

        // Montagem do elemento de tarefa \\
        botoes.appendChild(botaoEditar)
        botoes.appendChild(botaoExcluir)
        item.appendChild(textoTarefa)
        item.appendChild(botoes)
        listaTarefas.appendChild(item)
    }
}